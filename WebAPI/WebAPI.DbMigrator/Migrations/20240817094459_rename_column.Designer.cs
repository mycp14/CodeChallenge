// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.DbMigrator.DbContext;

#nullable disable

namespace WebAPI.DbMigrator.Migrations
{
    [DbContext(typeof(WebAPIDbContext))]
    [Migration("20240817094459_rename_column")]
    partial class rename_column
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.EFCore.Order", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("time")
                        .HasColumnType("time");

                    b.HasKey("order_id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebAPI.EFCore.OrderDetail", b =>
                {
                    b.Property<int>("order_detail_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_detail_id"));

                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<string>("pizza_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("quantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("order_detail_id");

                    b.HasIndex("order_id");

                    b.HasIndex("pizza_id");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("WebAPI.EFCore.Pizza", b =>
                {
                    b.Property<string>("pizza_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pizza_type_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<string>("size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pizza_id");

                    b.HasIndex("pizza_type_id");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("WebAPI.EFCore.PizzaType", b =>
                {
                    b.Property<string>("pizza_type_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pizza_type_id");

                    b.ToTable("PizzaTypes");
                });

            modelBuilder.Entity("WebAPI.EFCore.OrderDetail", b =>
                {
                    b.HasOne("WebAPI.EFCore.Order", "Order")
                        .WithMany()
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.EFCore.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("pizza_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("WebAPI.EFCore.Pizza", b =>
                {
                    b.HasOne("WebAPI.EFCore.PizzaType", "PizzaType")
                        .WithMany()
                        .HasForeignKey("pizza_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PizzaType");
                });
#pragma warning restore 612, 618
        }
    }
}
